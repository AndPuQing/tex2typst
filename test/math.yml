# Most test cases are from https://github.com/curvenote/tex-to-typst/blob/1d0b121d162911f1c99b47171939e30656f49270/tests/math.yml (MIT License)
title: tex2typst
cases:
  - title: Testing factorial, no space
    tex: 'p ( x )   =    \frac{e^{-\lambda}\lambda^{x}}{ x ! }'
    typst: p(x) = (e^(-lambda) lambda^x)/(x!)
  - title: Mathrm
    tex: 'p_e = 1 - \mathrm{e}^{-t \lambda}'
    typst: p_e = 1 - upright(e)^(-t lambda)
  - title: Cube root
    tex: '\sqrt[3]{x}'
    typst: root(3, x)
  - title: Simplified brackets
    tex: 'e_f(x)'
    typst: e_f (x)
  - title: Simplified brackets f(x)
    # This doesn't actually need the extra brackets, but it is clearer!
    tex: 'e_{f(x)}'
    typst: e_(f(x))
  - title: Text Functions
    tex: '\text{diag}({\boldsymbol{v}}) \boldsymbol{D}\boldsymbol{M}_f(\sigma^{-1})^{-1}\boldsymbol{D}^\top\text{diag}({\boldsymbol{v}})\phi = \boldsymbol{q}'
    typst: '"diag"(bold(v)) bold(D) bold(M)_f (sigma^(-1))^(-1) bold(D)^top "diag"(bold(v)) phi.alt = bold(q)'
  - title: Single Char Text
    tex: \text{a}
    typst: '"a"'
  - title: Plus minus
    tex: 'q = \pm I'
    typst: q = plus.minus I
  - title: Comma inside function
    tex: '\boldsymbol{j_x, j_y}'
    typst: 'bold(j_x comma j_y)'
  - title: Nested scripts
    tex: 'r_{s^+}'
    typst: 'r_(s^+)'
  - title: Nested functions
    tex: '\boldsymbol{m}_\text{ref}'
    typst: 'bold(m)_"ref"'
  - title: left and right brackets
    tex: '\left[\boldsymbol{A} \right) \left\{b \right)'
    typst: 'lr([bold(A))) lr({b))'
  - title: dot as right bracket
    tex: '\left\{ \frac{a}{b} \right.'
    typst: '{a/b'
  - title: dot as left bracket
    tex: '\left. \frac{a}{b} \right\}'
    typst: 'lr(a/b})'
  - title: lr
    tex: \left|a + \frac{1}{3} \right|^2
    typst: lr(|a + 1/3|)^2
  - title: symmetry left right
    tex: \left\{ a \right\} \left( b \right) \left[ c \right]
    typst: '{a}(b) [c]'
  - title: operatorname
    tex: '\operatorname{diag} \text{diag}'
    typst: 'op("diag") "diag"'
  - title: operatorname1
    tex: '\operatorname{a}'
    typst: op("a")
  - title: scripts
    tex: '\boldsymbol{k}_{Av} \boldsymbol{k}^{Av}'
    typst: 'bold(k)_(A v) bold(k)^(A v)'
  - title: scripts
    tex: |-
      \boldsymbol{D}
      \\
      \boldsymbol{G}_{z}
    typst: |-
      bold(D)
      \
      bold(G)_z
  - title: Complex equations with nested over/under braces
    tex: |-
      \begin{align*}
      \overbrace{
          \left[
              \frac{1}{\Delta t}
              \frac{\partial \boldsymbol{\theta}^{n+1}}{\partial\boldsymbol{\psi}^{n+1}}
              -\boldsymbol{D}
              \text{diag}\left( \boldsymbol{G} \boldsymbol{\psi}^{n+1} \right)
              \frac{\partial \boldsymbol{k}_{Av}}{\partial\boldsymbol{\psi}^{n+1}}
              -\boldsymbol{D}
              \text{diag}\left( \boldsymbol{k}_{Av}(\boldsymbol{\psi}^{n+1},\boldsymbol{m}) \right)
              \boldsymbol{G}
              - \boldsymbol{G}_{z}
              \frac{\partial \boldsymbol{k}_{Av}}{\partial\boldsymbol{\psi}^{n+1}}
          \right]
      }^{\boldsymbol{A}_0(\boldsymbol{\psi}^{n+1})}
      \frac{\partial \boldsymbol{\psi}^{n+1}}{\partial\boldsymbol{m}}
      \nonumber\\
      +
      \underbrace{
          \left[
              -\frac{1}{\Delta t}
              \frac{\partial \boldsymbol{\theta}^n}{\partial\boldsymbol{\psi}^n}
          \right]
      }_{\boldsymbol{A}_{-1}(\boldsymbol{\psi}^n)}
      \frac{\partial \boldsymbol{\psi}^n}{\partial\boldsymbol{m}}
      =
      \underbrace{
      \left[
          -\boldsymbol{D}
          \text{diag}\left( \boldsymbol{G} \boldsymbol{\psi}^{n+1} \right)
          \frac{\partial \boldsymbol{k}_{Av}}{\partial\boldsymbol{m}}
          -\boldsymbol{G}_{z}
          \frac{\partial \boldsymbol{k}_{Av}}{\partial\boldsymbol{m}}
      \right]
      }_{\boldsymbol{B}(\psi^{n+1})}&
      \end{align*}
    typst: |-
      overbrace(
      [
      1/(Delta t)
      (diff bold(theta)^(n + 1))/(diff bold(psi)^(n + 1))
      - bold(D)
      "diag"(bold(G) bold(psi)^(n + 1))
      (diff bold(k)_(A v))/(diff bold(psi)^(n + 1))
      - bold(D)
      "diag"(bold(k)_(A v)(bold(psi)^(n + 1) comma bold(m)))
      bold(G)
      - bold(G)_z
      (diff bold(k)_(A v))/(diff bold(psi)^(n + 1))
      ]
      , bold(A)_0 (bold(psi)^(n + 1)))
      (diff bold(psi)^(n + 1))/(diff bold(m))
      \
      +
      underbrace(
      [
      -1/(Delta t)
      (diff bold(theta)^n)/(diff bold(psi)^n)
      ]
      , bold(A)_(-1)(bold(psi)^n))
      (diff bold(psi)^n)/(diff bold(m))
      =
      underbrace(
      [
      -bold(D)
      "diag"(bold(G) bold(psi)^(n + 1))
      (diff bold(k)_(A v))/(diff bold(m))
      - bold(G)_z
      (diff bold(k)_(A v))/(diff bold(m))
      ]
      , bold(B)(psi^(n + 1))) &
  - title: leading underscore
    tex: _2
    typst: '""_2'
  - title: leading power
    tex: '^{\text{st}}'
    typst: '""^"st"'
  - title: greater than
    tex: 'a \ge b'
    typst: a >= b
  - title: greater than (preferShorthands=false)
    tex: 'a \ge b'
    typst: a gt.eq b
    preferShorthands: false
  - title: ddot
    tex: 'q, \dot{q}, \ddot{q}'
    typst: q, dot(q), dot.double(q)
  # - title: mat
  #   tex: 'x(t) = \left[ \begin{array}{c} q(t) & x \\ \dot{q}(t) & x \end{array}\right]'
  #   typst: 'x(t) = [ mat(delim: #none, q(t), x; dot(q)(t), x) ]'
  - title: brackets
    tex: '\frac{1}{\tau(X_2)}'
    typst: '1/(tau(X_2))'
  - title: bar and nested bb
    tex: '\mathbb{\bar{R}}'
    typst: 'bb(macron(R))'
  - title: Underscore with no content
    tex: 'P_{}^{1}'
    typst: 'P_()^1'
  - title: Simple overbrace
    tex: '\overbrace{a}^{b}'
    typst: 'overbrace(a, b)'
  - title: underbrace
    tex: '\underbrace{a}_{b}'
    typst: underbrace(a, b)
  - title: Test
    tex: a^{b^{n+1}}
    typst: a^(b^(n + 1))
  - title: Test2
    tex: a+b^1 + \frac{2}{3} + \overbrace{123}^{b}
    typst: a + b^1 + 2/3 + overbrace(123, b)
  - title: Symbols
    tex: '\alpha \nabla \partial'
    typst: alpha nabla diff
  - title: Align
    tex: |-
      \begin{align*}
      a &= b \\
      c &= d
      \end{align*}
    typst: |-
      a &= b \
      c &= d
  - title: Aligned
    tex: |-
      \begin{aligned}
      a &= b \\
      c &= d
      \end{aligned}
    typst: |-
      a &= b \
      c &= d
  - title: Aligned2
    tex: |-
      \begin{aligned}
      &a &= b \\
      &c &= d
      \end{aligned}
    typst: |-
      & a &= b \
      & c &= d
  - title: Matrix
    tex: |-
      m = \begin{matrix}
      a &= b \\
      c &= d
      \end{matrix}
    typst: |-
      m = mat(delim: #none, a, = b;
      c, = d)
  - title: Matrix2
    tex: |-
      \begin{matrix}
      &a &= b \\
      &c &= d
      \end{matrix}
    typst: |-
      mat(delim: #none, , a, = b;
      , c, = d)
  - title: pmatrix
    tex: |-
      m = \begin{pmatrix}
      a & b \\
      c & d
      \end{pmatrix}
    typst: |-
      m = mat(delim: "(", a, b;
      c, d)
  - title: bmatrix
    tex: |-
      m = \begin{bmatrix}
      a & b \\
      c & d
      \end{bmatrix}
    typst: |-
      m = mat(delim: "[", a, b;
      c, d)
  - title: Bmatrix
    tex: |-
      m = \begin{Bmatrix}
      a & b \\
      c & d
      \end{Bmatrix}
    typst: |-
      m = mat(delim: "{", a, b;
      c, d)
  - title: vmatrix
    tex: |-
      m = \begin{vmatrix}
      a & b \\
      c & d
      \end{vmatrix}
    typst: |-
      m = mat(delim: "|", a, b;
      c, d)
  - title: Vmatrix
    tex: |-
      m = \begin{Vmatrix}
      a & b \\
      c & d
      \end{Vmatrix}
    typst: |-
      m = mat(delim: bar.v.double, a, b;
      c, d)
  # - title: Array
  #   tex: |-
  #     \begin{array}{cc}
  #     a & b \\
  #     c & d
  #     \end{array}
  #   typst: |-
  #     mat(delim: #none, a, b;
  #     c, d)
  - title: Test3
    tex: \boldsymbol{x}
    typst: bold(x)
  - title: Test4
    tex: a^2 + b^2 = c^2
    typst: a^2 + b^2 = c^2
  - title: Euler Complex Exponential
    tex: e^{i\theta} = \cos \theta + i \sin \theta
    typst: e^(i theta) = cos theta + i sin theta
  - title: Euler Product
    tex: \prod_{p} \frac{1}{1-p^{-s}}= \sum_{n=1}^{\infty} \frac{1}{n^s}
    typst: product_p 1/(1 - p^(-s)) = sum_(n = 1)^infinity 1/n^s
  - title: Test5
    tex: "{a+b}^2"
    typst: (a + b)^2
  - title: Test6
    tex: 1 + {a + b} + c
    typst: 1 + a + b + c
  - title: Test7
    tex: (a + b)^2
    typst: (a + b)^2
  - title: leading minus sign
    tex: a^{-s}
    typst: a^(-s)
  - title: Test8
    tex: \sqrt{\frac{1}{x^2 + y^2}}
    typst: sqrt(1/(x^2 + y^2))
  - title: basic prime case
    tex: y'
    typst: y'
  - title: has both prime and subscript
    tex: y_1' + y'_2 + y_{a_1}' + {\theta}_1'
    typst: y'_1 + y'_2 + y'_(a_1) + theta'_1
  - title: accent, symbol over variable
    tex: \bar{y} \vec{x} \dot{y} \ddot{y} \tilde{a} \widetilde{a} \hat{a} \widehat{a}
    typst: macron(y) arrow(x) dot(y) dot.double(y) tilde(a) tilde(a) hat(a) hat(a)
  - title: underline, overline
    tex: \underline{a} \overline{a} \underline{a + 1} \overline{a + 1}
    typst: underline(a) overline(a) underline(a + 1) overline(a + 1)
  - title: comment
    tex: a + b % comment
    typst: a + b // comment
  - title: comment2
    tex: a + b % comment % comment2
    typst: a + b // comment % comment2
  - title: comment3
    tex: |-
      a + b % co
      c + d
      e + f % co
      g + h
    typst: |-
      a + b // co
      c + d
      e + f // co
      g + h
  - title: mod
    tex: a^{p-1} \equiv 1 \mod{p}
    typst: a^(p - 1) equiv 1 mod p
  - title: space before or after script
    tex: \lim _{x \to 0} \sum_{i=1} ^ n
    typst: lim_(x -> 0) sum_(i = 1)^n
  - title: spaces around text
    tex: i_D = \mu_n C_\text{ox} \frac{W}{L} \left[ (v_\text{GS} - V_t)v_\text{DS} - \frac{1}{2} v_\text{DS}^2 \right]
    typst: i_D = mu_n C_"ox" W/L [(v_"GS" - V_t) v_"DS" - 1/2 v_"DS"^2 ]
  - title: base is group wrapped in brackets
    tex: e = \lim_{{n \to \infty}} \left(1 + \frac{1}{n}\right)^n
    typst: e = lim_(n -> infinity)(1 + 1/n)^n
  - title: overset
    tex: \overset{a}{+}
    typst: "op(+, limits: #true)^a"
  - title: overset, special case 1
    tex: \overset{\text{def}}{=}
    typst: eq.def
  - title: overset, special case 2
    tex: \overset{def}{=}
    typst: eq.def
  - title: newline
    tex: |-
      a + b \\
      c + d
    typst: |-
      a + b \
      c + d
  - title: leading sign
    tex: -a
    typst: -a
  - title: oo
    tex: \infty
    typst: oo
    inftyToOo: true
  - title: overrightarrow
    tex: \overrightarrow{AB}
    typst: arrow(A B)
  - title: overleftarrow
    tex: \overleftarrow{AB}
    typst: accent(A B, <-)
  - title: Horizontal space symbols
    tex: "\\, \\: \\; \\quad"
    typst: thin med thick quad
  - title: hspace
    tex: \hspace{1cm}
    typst: "#h(1cm)"
  - title: cases1
    tex: |-
      \begin{cases}
      x^2, & \text{if } x \geq 0 \\
      -x,  & \text{if } x < 0
      \end{cases}
    typst: |-
      cases(x^2 comma & "if " x >= 0,
      - x comma & "if " x < 0)
  - title: cases2
    tex: |-
      A_{ij} = 
        \begin{cases}
        1, & \text{if } i = j \\
        0, & \text{otherwise}
        \end{cases}
    typst: |-
      A_(i j) =
      cases(1 comma & "if " i = j,
      0 comma & "otherwise")
  - title: cases3
    tex: |-
      P(X = x) = 
        \begin{cases}
        \frac{1}{n}, & x \in \{1,2,\dots,n\} \\
        0,           & \text{otherwise}
        \end{cases}
    typst: |-
      P(X = x) =
      cases(1/n comma & x in {1 comma 2 comma ... comma n},
      0 comma & "otherwise")
  - title: cases4
    tex: |-
      f(x) = 
        \begin{cases}
        x^2 + 1,        & \text{if } x < -1 \\
        \sin x + x^2,   & \text{if } -1 \leq x \leq 1 \\
        \sqrt{x},       & \text{if } x > 1
        \end{cases}
    typst: |-
      f(x) =
      cases(x^2 + 1 comma & "if " x < - 1,
      sin x + x^2 comma & "if " - 1 <= x <= 1,
      sqrt(x) comma & "if " x > 1)
  - title: cases5
    tex: |-
      \begin{align*}
      f(x) &= 
      \begin{cases}
      x^2, & x \geq 0 \\
      -x, & x < 0
      \end{cases} \\
      g(x) &= 
      \begin{cases}
      \sin x, & x < \pi \\
      0, & x \geq \pi
      \end{cases}
      \end{align*}

    typst: |-
      f(x) &=
      cases(x^2 comma & x >= 0,
      - x comma & x < 0) \
      g(x) &=
      cases(sin x comma & x < pi,
      0 comma & x >= pi)